azure:
  apiKeyFile: azure-key.txt
  endpointUrl: https://germanywestcentral.tts.speech.microsoft.com/cognitiveservices/v1
  voice: es-MX-JorgeNeural
  #  voice: es-PE-AlexNeural
  minPauseBetweenRequests: 1s
  retryOnTooManyRequests: true
#  logRequests: true
anki:
  #  logRequests: true
  tts:
    - forGeneratedNoteType: SpanishVerbV3
      textPreprocessing:
        - regexp: '\s+'
          replacement: ' '
        - regexp: '\{\{(?P<word>[^}]+)\}\}'
          replacement: '${word}'
    - textField: Word
      audioField: WordVoiceover
      noteFilter: '(not note:SpanishVerbV3) Word:_* WordVoiceover:'
      textPreprocessing:
        - regexp: '\s+'
          replacement: ' '
    - textField: Example1
      audioField: Example1Voiceover
      textPreprocessing:
        - regexp: '\s+'
          replacement: ' '
        - regexp: '\{\{(?P<word>[^}]+)\}\}'
          replacement: '${word}'
    - textField: Example2
      audioField: Example2Voiceover
      textPreprocessing:
        - regexp: '\s+'
          replacement: ' '
        - regexp: '\{\{(?P<word>[^}]+)\}\}'
          replacement: '${word}'
  noteTypes:
    - name: SpanishVerbV3
      fields:
        # For each field below, the following fields are created:
        #   Field,
        #   FieldVoiceover (unless skipVoiceover: true)
        #   FieldExample, FieldExampleVoiceover, FieldExampleExplanation (unless skipExample: true)
        - name: Word
          skipExample: true
        - name: Explanation
          skipExample: true
          skipVoiceover: true

        - name: IndicativePresentYo
          vars:
            PRONOUN: yo
            TENSE: Present Indicative
        - name: IndicativePresentTu
          vars:
            PRONOUN: tú
            TENSE: Present Indicative
        - name: IndicativePresentEl
          vars:
            PRONOUN: el/ella/usted
            TENSE: Present Indicative
        - name: IndicativePresentNosotros
          vars:
            PRONOUN: nosotros
            TENSE: Present Indicative
        - name: IndicativePresentVosotros
          vars:
            PRONOUN: vosotros
            TENSE: Present Indicative
        - name: IndicativePresentEllos
          vars:
            PRONOUN: ellos/ellas/ustedes
            TENSE: Present Indicative

        - name: ImperativeAffirmativeTu
          vars:
            PRONOUN: tú
            TENSE: Imperative Affirmative
        - name: ImperativeAffirmativeEl
          vars:
            PRONOUN: el/ella/usted
            TENSE: Imperative Affirmative
        - name: ImperativeAffirmativeNosotros
          vars:
            PRONOUN: nosotros
            TENSE: Imperative Affirmative
        - name: ImperativeAffirmativeVosotros
          vars:
            PRONOUN: vosotros
            TENSE: Imperative Affirmative
        - name: ImperativeAffirmativeEllos
          vars:
            PRONOUN: ellos/ellas/ustedes
            TENSE: Imperative Affirmative
      templates:
        # For each template a distinct card template is created for each field specified in forFields
        # The following meta-variables will be constituted in name, front and back before passing them to Anki:
        #   $$FIELD$$, $$FIELD_VOICEOVER$$, $$EXAMPLE$$, $$EXAMPLE_VOICEOVER$$, $$EXAMPLE_EXPLANATION$$
        #
        # Front layout is automatically wrapped with {{^$$FIELD$$}}{{/$$FIELD$$}}, so there is no need in
        # adding this manually
        - name: "Infinitive"
          forFields:
            - Word
          front: |
            <div class="verb">[verbo infinitivo]</div>
            {{Explanation}}
            {{type::Word}}
          back: |
            <div class="verb">[verbo infinitivo]</div>
            <div><b>{{Word}}</b>{{WordVoiceover}}</div> 
            <div>{{Explanation}}</div>
            <hr id=answer>
            {{type::Word}}
        - name: "FillIn$$FIELD$$"
          forFields:
            - IndicativePresentYo
            - IndicativePresentTu
            - IndicativePresentEl
            - IndicativePresentNosotros
            - IndicativePresentVosotros
            - IndicativePresentEllos
            - ImperativeAffirmativeTu
          front: |
            <div><span class="verb">[verb, $$TENSE$$]</span></div><br>
            {{^$$EXAMPLE$$}}
              <div>$$PRONOUN$$ <b><span class='cloze'>[&#8230;]</span></b></div>
            {{/$$EXAMPLE$$}}
            {{#$$EXAMPLE$$}}
              <i>Completa la frase con verbo:</i><br>
              <span class="mycloze">{{$$EXAMPLE$$}}</span>

              <br><br><i>Verbo significado:</i><br>
              {{Explanation}}
            {{/$$EXAMPLE$$}}


            {{type::$$FIELD$$}}


            <script>
            var clozes = document.querySelectorAll(".mycloze");
            clozes.forEach(function (elem) {
                var html = elem.innerHTML;
                while (true) {
                    var beginIdx = html.indexOf("{" + "{");
                    if (beginIdx < 0) {
                        break;
                    }
                    var endIdx = html.indexOf("}" + "}", beginIdx);
                    if (endIdx < 0) {
                        break;
                    }
                    html = html.substring(0, beginIdx) + "<b><span class='cloze'>[&#8230;]</span></b>" + html.substring(endIdx + 2);
                }

                elem.innerHTML = html;
            });
            </script>
          back: |
            <div><span class="verb">[verb, $$TENSE$$]</span></div>
            <div>$$PRONOUN$$ <b><span class='cloze'>{{text:$$FIELD$$}}</span></b>{{$$FIELD_VOICEOVER$$}}</div>
            
            {{#$$EXAMPLE$$}}
            <span class="mycloze">{{$$EXAMPLE$$}}</span>{{$$EXAMPLE_VOICEOVER$$}}
            <br>
            {{$$EXAMPLE_EXPLANATION$$}}

            <hr id=answer>
            {{type::$$FIELD$$}}


            <script>
            var clozes = document.querySelectorAll(".mycloze");
            clozes.forEach(function (elem) {
                var html = elem.innerHTML;
                while (true) {
                    var beginIdx = html.indexOf("{" + "{");
                    if (beginIdx < 0) {
                        break;
                    }

                    var endIdx = html.indexOf("}" + "}", beginIdx);
                    if (endIdx < 0) {
                        break;
                    }
                    html = html.substring(0, beginIdx) +
                        "<b><span class='cloze'>" +
                        html.substring(beginIdx+2, endIdx) +
                        "</span></b>" +
                        html.substring(endIdx + 2);
                }

                elem.innerHTML = html;
            });
            </script>
            {{/$$EXAMPLE$$}}
      css: |
        .card {
          font-family: arial;
          font-size: 20px;
          text-align: center;
          color: black;
          background-color: white;
        }

        .verb {
          font-style: italic;
          font-weight: bold;
          font-size: 60%;
        }

        .cloze {
         font-weight: bold;
         color: blue;
        }
